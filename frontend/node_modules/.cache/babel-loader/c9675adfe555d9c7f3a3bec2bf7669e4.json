{"ast":null,"code":"var _jsxFileName = \"/home/ben/Projects/pi-monitor/frontend/src/compontents/PiContainer.js\";\nimport React from \"react\";\nimport PiData from \"./PiData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PiContainer() {\n  async function GetPiInformation() {}\n\n  ;\n\n  function sampledata() {\n    let sample = {\n      \"pis\": [{\n        \"id\": 0,\n        \"cpu\": 90,\n        \"gpu\": 10,\n        \"ram\": 200\n      }, {\n        \"id\": 1,\n        \"cpu\": 10,\n        \"gpu\": 40,\n        \"ram\": 10\n      }]\n    };\n    return sample;\n  }\n\n  function PiItems() {\n    // Get a list of pi ids.\n    //let list_pi = GetPiInformation() \n    let sample = sampledata(); // pass pi information to PiData for each pi\n    // Try using context for future use\n\n    return sample.pis.map(pi => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Pi Number: \", pi.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PiData, {\n        cpu: pi.cpu,\n        gpu: pi.gpu,\n        ram: pi.ram\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello from PiContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: PiItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = PiContainer;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PiContainer\");","map":{"version":3,"sources":["/home/ben/Projects/pi-monitor/frontend/src/compontents/PiContainer.js"],"names":["React","PiData","PiContainer","GetPiInformation","sampledata","sample","PiItems","pis","map","pi","id","cpu","gpu","ram"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,eAAe,SAASC,WAAT,GAAsB;AAEjC,iBAAeC,gBAAf,GAAiC,CAEhC;;AAAA;;AAED,WAASC,UAAT,GAAqB;AACjB,QAAIC,MAAM,GAAG;AACT,aAAM,CACF;AACI,cAAK,CADT;AAEI,eAAM,EAFV;AAGI,eAAM,EAHV;AAII,eAAM;AAJV,OADE,EAOF;AACI,cAAK,CADT;AAEI,eAAM,EAFV;AAGI,eAAM,EAHV;AAII,eAAM;AAJV,OAPE;AADG,KAAb;AAgBA,WAAOA,MAAP;AAEH;;AAED,WAASC,OAAT,GAAkB;AACd;AACA;AACA,QAAID,MAAM,GAAGD,UAAU,EAAvB,CAHc,CAId;AACA;;AACA,WAAOC,MAAM,CAACE,GAAP,CAAWC,GAAX,CAAgBC,EAAD,iBAClB;AAAA,8BACI;AAAA,mCAAkBA,EAAE,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAGD,EAAE,CAACE,GAAjB;AAAsB,QAAA,GAAG,EAAGF,EAAE,CAACG,GAA/B;AAAqC,QAAA,GAAG,EAAGH,EAAE,CAACI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAMH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACMP,OAAO;AADb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;KAjDuBJ,W;AAiDvB","sourcesContent":["import React from \"react\";\n\nimport PiData from \"./PiData.js\"\n\nexport default function PiContainer(){\n \n    async function GetPiInformation(){\n\n    };\n\n    function sampledata(){\n        let sample = {\n            \"pis\":[\n                {\n                    \"id\":0,\n                    \"cpu\":90,\n                    \"gpu\":10,\n                    \"ram\":200\n                },\n                {\n                    \"id\":1,\n                    \"cpu\":10,\n                    \"gpu\":40,\n                    \"ram\":10\n                }\n            ]\n        }\n        return sample;\n\n    }\n\n    function PiItems(){\n        // Get a list of pi ids.\n        //let list_pi = GetPiInformation() \n        let sample = sampledata()\n        // pass pi information to PiData for each pi\n        // Try using context for future use\n        return sample.pis.map((pi) => (\n            <div>  \n                <h3> Pi Number: { pi.id } </h3> \n                <PiData cpu={ pi.cpu} gpu={ pi.gpu } ram={ pi.ram }/>\n            </div>\n        ));\n    }\n\n    return(\n        <div className=\"bg-blue-200\">\n            <h3>Hello from PiContainer</h3>\n            <div>\n                { PiItems() }\n            </div>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}